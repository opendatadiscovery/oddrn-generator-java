plugins {
    id 'checkstyle'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

group = 'org.opendatadiscovery'
version = file('VERSION').text

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

ext {
    env = findProperty('env') ?: 'dev'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
}

checkstyle {
    configFile = project(':').file('config/checkstyle/checkstyle.xml')
    configProperties = ["suppressionFile": project(':').file('config/checkstyle/suppressions.xml')]
    ignoreFailures = false
    maxWarnings = 0
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled false
    }
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar, javadocJar
}

if (env == 'prod') {
    signing {
        sign(publishing.publications)
    }
}

publishing {
    if (env == 'prod') {
        repositories {
            maven {
                url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = 'org.opendatadiscovery'
            artifactId = 'oddrn-generator-java'
            version = version

            from components.java

            artifact(sourceJar) {
                classifier = 'sources'
            }

            artifact(javadocJar) {
                classifier = 'javadoc'
            }

            pom {
                name = 'Java ODDRN Generator'
                description = 'OpenDataDiscovery Resource Name generator for Java'
                url = 'https://github.com/opendatadiscovery/oddrn-generator-java'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'gosin'
                        name = 'German Osin'
                        organization = 'opendatadiscovery.org'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/opendatadiscovery/oddrn-generator-java.git'
                    developerConnection = 'scm:git:git://github.com/opendatadiscovery/oddrn-generator-java.git'
                    url = 'https://github.com/opendatadiscovery/oddrn-generator-java'
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")

            username = sonatypeUsername
            password = sonatypePassword
        }
    }
}
